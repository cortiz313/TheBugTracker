@model TheBugTracker.Models.ViewModels.AddProjectWithPMViewModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Project</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" method="post" enctype="multipart/form-data"> @*without the encode type, forms will not transmit files selected in form, need when add ability to choose files *@
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            
            <div class="form-group">
                <label asp-for="Project.Name" class="control-label"></label>
                <input asp-for="Project.Name" class="form-control" />
                <span asp-validation-for="Project.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Project.Description" class="control-label"></label>
                <input asp-for="Project.Description" class="form-control" />
                <span asp-validation-for="Project.Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Project.StartDate" class="control-label"></label>
                <input asp-for="Project.StartDate" class="form-control" />
                <span asp-validation-for="Project.StartDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Project.EndDate" class="control-label"></label>
                <input asp-for="Project.EndDate" class="form-control" />
                <span asp-validation-for="Project.EndDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label"> Choose a priority </label> @*instead of letting the model say what goes here, with this code you do it yourself, label asp-for chooses what goes in the label*@
                <select asp-for="Project.ProjectPriorityId" class ="form-control" asp-items="@Model.PriorityList"></select> @*@model.priority list chooses drop down options based on that property of the model*@
            </div>
            @*
                Set up Image capture
            *@
            <div class="form-group">
                <label class="control-label">Project Image</label>
                <input asp-for="Project.ImageFormFile" class="form-control" type="file" accept=".png,.jpg,.jpeg,.gif" 
                onchange="document.getElementById('imageFileData').src = window.URL.createObjectURL(this.files[0])" />  @*asp for tag helper for the input will configure the input according to the type of data thats in the asp for, gives input name and id*@
                @*line above will set the imageFileData src *@
                <span asp-validation-for="Project.ImageFormFile" class="text-danger"></span>
            </div>

            <label> Image Preview </label>
            @if (Model.Project?.ImageFileData != null)
            {
                <img id="imageFileData" class="img-fluid img-thumbnail" style="width:100px;height:80px" src="data:image/*;base64,@(Convert.ToBase64String(Model.Project.ImageFileData))"> @*Converts byte array to a string to be interpreted as an image src*@
            }
            else {
                <img id="imageFileData" class="img-fluid img-thumbnail" style="width:100px;height:80px" src=""> @*Can put default image in here, put img in root img folder*@

            }

            @*
                Code to allow admins to select the project manager on a project when creating it
                Fix up PM SelectList
            *@
            <div class="form-group">
                <label class="control-label"> Project Manager </label>
                <select asp-for="PmId" class="form-control" asp-items="@Model.PMList">
                    <option></option> @*Adds an empty option, so it doesnt default to the options available, in case you dont want to assign right away*@

                </select>
            </div>
            
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
